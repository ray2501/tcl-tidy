# tcl-tidy.test --
#
#	Tests for tcl-tidy
#------------------------------------------------------------------------------

lappend auto_path .
if {[lsearch [namespace children] ::tcltest] == -1} {
    package require tcltest 2
    namespace import -force ::tcltest::*
}
loadTestedCommands
package require tidy

#-------------------------------------------------------------------------------

test tidy-1.1 {create, wrong # args} {*}{
    -body {
        tidy::tidy
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test tidy-1.2 {create} {*}{
    -body {
        tidy::tidy create
    }
    -returnCodes ok
    -match glob
    -result {tidy0}
}

test tidy-1.3 {parse string, wrong # args} {*}{
    -body {
        tidy0 parse_string "<title>Foo</title><p>Foo!" foo
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test tidy-1.4 {parse string} {*}{
    -body {
        tidy0 parse_string "<title>Foo</title><p>Foo!"
    }
    -returnCodes ok
}

test tidy-1.5 {clean and repair} {*}{
    -body {
        tidy0 clean_repair
    }
    -returnCodes ok
}

test tidy-1.6 {set config, wrong list} {*}{
    -body {
        tidy0 set_config [list show-body-only]
    }
    -returnCodes error
    -match glob
    -result {Check list failed}
}

test tidy-1.7 {set config} {*}{
    -body {
        tidy0 set_config [list show-body-only 1]
    }
    -returnCodes ok
}

test tidy-1.8 {get opt} {*}{
    -body {
        tidy0 get_opt show-body-only
    }
    -returnCodes ok
    -match glob
    -result {1}
}

test tidy-1.9 {set opt, wrong # args} {*}{
    -body {
        tidy0 set_opt force-output
    }
    -returnCodes error
    -match glob
    -result {wrong # args*}
}

test tidy-1.10 {set opt} {*}{
    -body {
        tidy0 set_opt force-output 1
    }
    -returnCodes ok
}

test tidy-1.11 {get opt} {*}{
    -body {
        tidy0 get_opt force-output
    }
    -returnCodes ok
    -match glob
    -result {1}
}

test tidy-1.12 {get output} {*}{
    -body {
        tidy0 get_output
    }
    -returnCodes ok
    -match glob
    -result {<p>Foo!</p>*}
}

test tidy-1.13 {close} {*}{
    -body {
        tidy0 close
    }
    -returnCodes ok
}

cleanupTests
return
